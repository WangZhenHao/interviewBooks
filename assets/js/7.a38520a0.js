(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{251:function(e,n,t){"use strict";t.r(n);var a=t(28),r=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"前端构建工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端构建工具"}},[e._v("#")]),e._v(" 前端构建工具")]),e._v(" "),t("h3",{attrs:{id:"_1-amd，cmd，commonjs和es6的对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-amd，cmd，commonjs和es6的对比"}},[e._v("#")]),e._v(" 1.AMD，CMD，CommonJS和ES6的对比")]),e._v(" "),t("ul",[t("li",[e._v("1.AMD")])]),e._v(" "),t("p",[e._v("AMD是RequireJS在推广过程中对模块定义的规范化产出。")]),e._v(" "),t("p",[e._v("AMD规范则是非同步加载模块，允许指定回调函数。")]),e._v(" "),t("p",[e._v("AMD标准中，定义了下面两个API：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("\n\n1.require([module], callback)\n2.define(id, [depends], callback)\n　　即通过define来定义一个模块，然后使用require来\n加载一个模块。 并且，require还支持CommonJS的模块导出方式。\n\ntest.js\ndefine(['package/lib',...], function(lib) {\n    function foo () {\n        lib.log('hello world');\n    }\n\n    return {\n      foo: foo\n    }\n});\n\nrequire(['test'], function(test) {\n  test.foo()\n})\n")])])]),t("ul",[t("li",[e._v("2.CMD")])]),e._v(" "),t("p",[e._v("CMD是SeaJS在推广过程中对模块定义的规范化产出。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("//所有模块都通过define来定义\ndefine(function(require, exports, module) {  \n  // 通过require引入依赖\n  var $ = require('jquery');\n  var Spinning = require('./spinning');\n  exports.doSomething = ...\n  module.exports = ...\n})\n\n二者的区别是前者是对于依赖的模块提前执行，\n而后者是延迟执行。 前者推崇依赖前置，而后\n者推崇依赖就近，即只在需要用到某个模块的时候再require。\n\n")])])]),t("ul",[t("li",[e._v("3.CommonJS规范---module.exports")])]),e._v(" "),t("p",[e._v("前端浏览器不支持，Nodejs中使用的是这个规范")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("exports.area = function(r) {\n   return Math.PI * r * r;\n}\nexports.circleCumference= function(r) {\n   return Math.PI * r * r;\n}\n\nCommonJS的核心思想就是通过 require 方法来同步加\n载所要依赖的其他模块，然后通过\n exports 或者 module.exports 来导出需要暴露的接口。\n\n")])])]),t("ul",[t("li",[e._v("4.ES6---export/import")])]),e._v(" "),t("p",[e._v("在ES6中，我们可以使用 import 关键字引入模块，通过 exprot 关键字导出模块，功能较之于前几个方案更为强大，也是我们所推崇的，但是由于ES6目前无法在浏览器中执行，所以，我们只能通过babel将不被支持的import编译为当前受到广泛支持的 require。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("import App from './App.vue'\nexport default {\n   props: ['num']\n}\n\n")])])]),t("ul",[t("li",[e._v("5.UMD\nUMD 叫做通用模块定义规范（Universal Module Definition）它没有自己专有的规范，是集结了 CommonJs、CMD、AMD 的规范于一身")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("((root, factory) => {\n    if (typeof define === 'function' && define.amd) {\n        //AMD\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object') {\n        //CommonJS\n        var $ = requie('jquery');\n        module.exports = factory($);\n    } else {\n        root.testModule = factory(root.jQuery);\n    }\n})(this, ($) => {\n    //todo\n});\n")])])]),t("h3",{attrs:{id:"_2-npm包发布命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-npm包发布命令"}},[e._v("#")]),e._v(" 2.npm包发布命令")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm publish --registry http://registry.npmjs.org\n")])])]),t("h3",{attrs:{id:"_3-webpack中的externals"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-webpack中的externals"}},[e._v("#")]),e._v(" 3.webpack中的externals")]),e._v(" "),t("p",[e._v("防止将某些 import 的包(package)打包到 bundle 中，而是在运行时(runtime)再去从外部获取这些扩展依赖(external dependencies)")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("externals: {\n  'weixin-js-sdk': 'wx'\n}\n")])])]),t("h3",{attrs:{id:"_4-webpack性能优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-webpack性能优化"}},[e._v("#")]),e._v(" 4.webpack性能优化")])])}),[],!1,null,null,null);n.default=r.exports}}]);