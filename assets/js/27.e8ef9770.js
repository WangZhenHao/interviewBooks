(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{310:function(a,t,e){"use strict";e.r(t);var s=e(14),i=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"css知识点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css知识点"}},[a._v("#")]),a._v(" css知识点")]),a._v(" "),t("h3",{attrs:{id:"说说盒子模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#说说盒子模型"}},[a._v("#")]),a._v(" 说说盒子模型")]),a._v(" "),t("p",[a._v("CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。\n盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。")]),a._v(" "),t("ul",[t("li",[a._v("Margin(外边距) - 清除边框外的区域，外边距是透明的。")]),a._v(" "),t("li",[a._v("Border(边框) - 围绕在内边距和内容外的边框。")]),a._v(" "),t("li",[a._v("Padding(内边距) - 清除内容周围的区域，内边距是透明的。")]),a._v(" "),t("li",[a._v("Content(内容) - 盒子的内容，显示文本和图像。")])]),a._v(" "),t("h3",{attrs:{id:"_1-css3中的box-sizing的三个特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-css3中的box-sizing的三个特性"}},[a._v("#")]),a._v(" 1.css3中的box-sizing的三个特性")]),a._v(" "),t("ul",[t("li",[a._v("content-box：默认,border和padding不记入width之内。是w3c标准盒子模型")]),a._v(" "),t("li",[a._v("Border-box: border,padding计算入width之内,")]),a._v(" "),t("li",[a._v("Padding-box: padding计入width之内,只有firefox实现这个值")]),a._v(" "),t("li",[a._v("Inherit: 父元素继承 box-sizing 属性的值。")])]),a._v(" "),t("h3",{attrs:{id:"_2-display-none和visible-hidden的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-display-none和visible-hidden的区别"}},[a._v("#")]),a._v(" 2.display:none和visible:hidden的区别")]),a._v(" "),t("p",[a._v("前者隐藏元素,在布局中不给它分配空间,后者隐藏元素,但任然保留对应的空间")]),a._v(" "),t("h3",{attrs:{id:"_3-rem和em的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-rem和em的区别"}},[a._v("#")]),a._v(" 3.rem和em的区别")]),a._v(" "),t("p",[a._v("em现对于父元素,rem现对于根元素")]),a._v(" "),t("h3",{attrs:{id:"_4-css实现单行文字省略和多行文字省略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-css实现单行文字省略和多行文字省略"}},[a._v("#")]),a._v(" 4.css实现单行文字省略和多行文字省略")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("一: 单行文字省略\n.ellipsis {\n  overflow: hidden;\n  white-space: nowrap;// 属性设置如何处理元素内的空白。\n  text-overflow: ellipsis;// 属性规定当文本溢出包含元素时发生的事情。\n  width: 100px;\n}\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("二: 多行文字省略\n.ellipsis2 {\n  width: 200px;\n  word-break: break-all;\n  text-overflow: ellipsis;\n  display: -webkit-box; /** 对象作为伸缩盒子模型显示 **/\n  -webkit-box-orient: vertical; /**属性规定框的子元素应该被水平或垂直排列。**/\n  -webkit-line-clamp: 3; /**限制在一个块元素显示的文本的行数。**/\n  overflow: hidden;  /** 隐藏超出的内容 **/\n}\n")])])]),t("h3",{attrs:{id:"_5-清除浮动有几种方式-各自额优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-清除浮动有几种方式-各自额优缺点"}},[a._v("#")]),a._v(" 5.清除浮动有几种方式,各自额优缺点")]),a._v(" "),t("ul",[t("li",[a._v("1.使用空标签清除浮动clear:both")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("优点: 能清除任何标签.\n缺点: 增加无意义的标签\n")])])]),t("ul",[t("li",[t("p",[a._v("2.给父级添加overflow:hidden")])]),a._v(" "),t("li",[t("p",[a._v("3.after伪类 清浮动")])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('选择符:after{\n        content:".";\n        clear:both;\n        display:block;\n        height:0;\n        overflow:hidden;\n        visibility:hidden;\n     }\n')])])]),t("ul",[t("li",[a._v("4.父级div定义 height")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("优点: 简单、代码少、容易掌握 \n缺点：只适合高度固定的布局，要给出精确的高度，如果高度和父级div不一样时，会产生问题\n")])])]),t("ul",[t("li",[a._v("5.父级div 也一起浮动")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("优点：没有优点 \n缺点：会产生新的浮动问题。 \n")])])]),t("h3",{attrs:{id:"_6-垂直居中有几种实现方式-分别是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-垂直居中有几种实现方式-分别是什么"}},[a._v("#")]),a._v(" 6.垂直居中有几种实现方式,分别是什么")]),a._v(" "),t("ul",[t("li",[a._v("一:单行行内元素")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("1,height和line-height设置为相等\n2,设置padding-bottom和padding-top\n")])])]),t("ul",[t("li",[a._v("二: 可以将元素专为table,这是vertical-align")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('#wrap {\n    height: 500px;\n    width: 500px;\n    display: table-cell;\n    vertical-align:middle;\n    border-style:double;\n}\n<div id="wrap">\n  <div id="content">多行文字居中多行文字居中多行文字居中多行文字居中多行文字居中多行文字居中多行文字居中多行文字居中\n  <img src="http://img.taopic.com/uploads/allimg/140320/235013-14032020515270.jpg" width="40">\n   </div>\n</div>\n')])])]),t("ul",[t("li",[a._v("三: 绝对定位来实现垂直居中")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(".child {\n  Position:absolute;\n  Top; 50%;\n  Left: 50%;\n  Transform: translate3d(-50%, -50% ,0);\n}\n")])])]),t("ul",[t("li",[a._v("flex布局")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('.flex-wrap {\n       display: flex;\n       justify-content: center;\n       align-items: center;\n}\n.flex-item {\n\t\twidth: 50px;\n\t\theight: 10px;\n\t\tborder: 1px solid yellow;\n\t}\n<div class="flex-wrap">\n\t  <div class="flex-item"></div>\n\t  <div class="flex-item"></div>\n\t  <div class="flex-item"></div>\n</div>\n')])])])])}),[],!1,null,null,null);t.default=i.exports}}]);