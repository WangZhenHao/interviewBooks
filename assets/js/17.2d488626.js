(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{261:function(t,a,s){"use strict";s.r(a);var n=s(28),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"算法考题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法考题"}},[t._v("#")]),t._v(" 算法考题")]),t._v(" "),s("h3",{attrs:{id:"_1-说说算法的复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-说说算法的复杂度"}},[t._v("#")]),t._v(" 1.说说算法的复杂度")]),t._v(" "),s("h4",{attrs:{id:"常数阶o-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常数阶o-1"}},[t._v("#")]),t._v(" 常数阶O(1)")]),t._v(" "),s("p",[t._v("O(1)只是常量级时间复杂度的一种表示方法，并不是指只执行了一行代码，比如下面这段代码，即使有3行，他的时间复杂度也是O(1),而不是O(3)。一般情况下，只要算法中不存在循环语句、递归语句，即便有成千上万行代码，其时间复杂度也是O(1)。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let i = 2;\nlet j = 5;\nlet sun = i + j;\n")])])]),s("h4",{attrs:{id:"线性阶-o-n"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性阶-o-n"}},[t._v("#")]),t._v(" 线性阶 O(n)")]),t._v(" "),s("p",[t._v("下面这段代码的时间复杂度为O(n)，因为循环体中的代码需要执行n次。\n我们要分析算法的复杂度，关键就是要分析循环结构的运行情况。上面代码因为循环体中代码需要执行n次，所以时间复杂度为O(n)。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let sum = 0;\nfor (let i=0;i<n;i++){\n    sum = sum +i\n}\n")])])]),s("h4",{attrs:{id:"对数阶-o-logn-o-nlogn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对数阶-o-logn-o-nlogn"}},[t._v("#")]),t._v(" 对数阶 O(logn) O(nlogn)")]),t._v(" "),s("p",[t._v("比如：二分法排序")]),t._v(" "),s("p",[t._v("对数阶时间复杂度非常常见。\n从上面代码中可用看出，遍历从1开始，每循环一次就乘以2，当i大于n时循环结束。由于2的x次方等于n，x = log2n，这个循环的时间复杂度就是O(log2n)。不管是以2为底，还是以3为底，我们都可以把所有对数阶的时间复杂度计作：O(logn)。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("let i = 1;\nwhile (i <= n) {\n    i = i * 2\n}\n")])])]),s("h3",{attrs:{id:"平方阶-o-n²"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#平方阶-o-n²"}},[t._v("#")]),t._v(" 平方阶 O(n²)")]),t._v(" "),s("p",[t._v("比如： 冒泡排序")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("for (let i=0;i<n;i++) {\n    for (let j=o;j<n;j++) {\n        /*时间复杂度为O(1)的程序步骤*/\n    }\n}\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);